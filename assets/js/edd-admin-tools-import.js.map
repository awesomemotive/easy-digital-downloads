{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./assets/js/admin/tools/import/index.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,EAAE;;AAEF,4DAA4D;;AAE5D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,IAAI;;AAEJ;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;;AAEA;;AAEA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,KAAK;AACL;AACA;AACA,MAAM;AACN;AACA,MAAM;;AAEN;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;;AAEA;AACA;AACA,CAAC","file":"assets/js/edd-admin-tools-import.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./assets/js/admin/tools/import/index.js\");\n","/**\r\n * Import screen JS\r\n */\r\nvar EDD_Import = {\r\n\r\n\tinit: function() {\r\n\t\tthis.submit();\r\n\t},\r\n\r\n\tsubmit: function() {\r\n\t\tconst self = this;\r\n\r\n\t\t$( '.edd-import-form' ).ajaxForm( {\r\n\t\t\tbeforeSubmit: self.before_submit,\r\n\t\t\tsuccess: self.success,\r\n\t\t\tcomplete: self.complete,\r\n\t\t\tdataType: 'json',\r\n\t\t\terror: self.error,\r\n\t\t} );\r\n\t},\r\n\r\n\tbefore_submit: function( arr, form, options ) {\r\n\t\tform.find( '.notice-wrap' ).remove();\r\n\t\tform.append( '<div class=\"notice-wrap\"><span class=\"spinner is-active\"></span><div class=\"edd-progress\"><div></div></div></div>' );\r\n\r\n\t\t//check whether client browser fully supports all File API\r\n\t\tif ( window.File && window.FileReader && window.FileList && window.Blob ) {\r\n\r\n\t\t\t// HTML5 File API is supported by browser\r\n\r\n\t\t} else {\r\n\t\t\tconst import_form = $( '.edd-import-form' ).find( '.edd-progress' ).parent().parent();\r\n\t\t\tconst notice_wrap = import_form.find( '.notice-wrap' );\r\n\r\n\t\t\timport_form.find( '.button-disabled' ).removeClass( 'button-disabled' );\r\n\r\n\t\t\t//Error for older unsupported browsers that doesn't support HTML5 File API\r\n\t\t\tnotice_wrap.html( '<div class=\"update error\"><p>' + edd_vars.unsupported_browser + '</p></div>' );\r\n\t\t\treturn false;\r\n\t\t}\r\n\t},\r\n\r\n\tsuccess: function( responseText, statusText, xhr, form ) {},\r\n\r\n\tcomplete: function( xhr ) {\r\n\t\tconst self = $( this ),\r\n\t\t\tresponse = jQuery.parseJSON( xhr.responseText );\r\n\r\n\t\tif ( response.success ) {\r\n\t\t\tconst form = $( '.edd-import-form .notice-wrap' ).parent();\r\n\r\n\t\t\tform.find( '.edd-import-file-wrap,.notice-wrap' ).remove();\r\n\t\t\tform.find( '.edd-import-options' ).slideDown();\r\n\r\n\t\t\t// Show column mapping\r\n\t\t\tlet select = form.find( 'select.edd-import-csv-column' ),\r\n\t\t\t\trow = select.parents( 'tr' ).first(),\r\n\t\t\t\toptions = '',\r\n\t\t\t\tcolumns = response.data.columns.sort( function( a, b ) {\r\n\t\t\t\t\tif ( a < b ) {\r\n\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( a > b ) {\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t} );\r\n\r\n\t\t\t$.each( columns, function( key, value ) {\r\n\t\t\t\toptions += '<option value=\"' + value + '\">' + value + '</option>';\r\n\t\t\t} );\r\n\r\n\t\t\tselect.append( options );\r\n\r\n\t\t\tselect.on( 'change', function() {\r\n\t\t\t\tconst key = $( this ).val();\r\n\r\n\t\t\t\tif ( ! key ) {\r\n\t\t\t\t\t$( this ).parent().next().html( '' );\r\n\t\t\t\t} else if ( false !== response.data.first_row[ key ] ) {\r\n\t\t\t\t\t$( this ).parent().next().html( response.data.first_row[ key ] );\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$( this ).parent().next().html( '' );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\t$.each( select, function() {\r\n\t\t\t\t$( this ).val( $( this ).attr( 'data-field' ) ).change();\r\n\t\t\t} );\r\n\r\n\t\t\t$( document.body ).on( 'click', '.edd-import-proceed', function( e ) {\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tform.append( '<div class=\"notice-wrap\"><span class=\"spinner is-active\"></span><div class=\"edd-progress\"><div></div></div></div>' );\r\n\r\n\t\t\t\tresponse.data.mapping = form.serialize();\r\n\r\n\t\t\t\tEDD_Import.process_step( 1, response.data, self );\r\n\t\t\t} );\r\n\t\t} else {\r\n\t\t\tEDD_Import.error( xhr );\r\n\t\t}\r\n\t},\r\n\r\n\terror: function( xhr ) {\r\n\t\t// Something went wrong. This will display error on form\r\n\r\n\t\tconst response = jQuery.parseJSON( xhr.responseText );\r\n\t\tconst import_form = $( '.edd-import-form' ).find( '.edd-progress' ).parent().parent();\r\n\t\tconst notice_wrap = import_form.find( '.notice-wrap' );\r\n\r\n\t\timport_form.find( '.button-disabled' ).removeClass( 'button-disabled' );\r\n\r\n\t\tif ( response.data.error ) {\r\n\t\t\tnotice_wrap.html( '<div class=\"update error\"><p>' + response.data.error + '</p></div>' );\r\n\t\t} else {\r\n\t\t\tnotice_wrap.remove();\r\n\t\t}\r\n\t},\r\n\r\n\tprocess_step: function( step, import_data, self ) {\r\n\t\t$.ajax( {\r\n\t\t\ttype: 'POST',\r\n\t\t\turl: ajaxurl,\r\n\t\t\tdata: {\r\n\t\t\t\tform: import_data.form,\r\n\t\t\t\tnonce: import_data.nonce,\r\n\t\t\t\tclass: import_data.class,\r\n\t\t\t\tupload: import_data.upload,\r\n\t\t\t\tmapping: import_data.mapping,\r\n\t\t\t\taction: 'edd_do_ajax_import',\r\n\t\t\t\tstep: step,\r\n\t\t\t},\r\n\t\t\tdataType: 'json',\r\n\t\t\tsuccess: function( response ) {\r\n\t\t\t\tif ( 'done' === response.data.step || response.data.error ) {\r\n\t\t\t\t\t// We need to get the actual in progress form, not all forms on the page\r\n\t\t\t\t\tconst import_form = $( '.edd-import-form' ).find( '.edd-progress' ).parent().parent();\r\n\t\t\t\t\tconst notice_wrap = import_form.find( '.notice-wrap' );\r\n\r\n\t\t\t\t\timport_form.find( '.button-disabled' ).removeClass( 'button-disabled' );\r\n\r\n\t\t\t\t\tif ( response.data.error ) {\r\n\t\t\t\t\t\tnotice_wrap.html( '<div class=\"update error\"><p>' + response.data.error + '</p></div>' );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\timport_form.find( '.edd-import-options' ).hide();\r\n\t\t\t\t\t\t$( 'html, body' ).animate( {\r\n\t\t\t\t\t\t\tscrollTop: import_form.parent().offset().top,\r\n\t\t\t\t\t\t}, 500 );\r\n\r\n\t\t\t\t\t\tnotice_wrap.html( '<div class=\"updated\"><p>' + response.data.message + '</p></div>' );\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$( '.edd-progress div' ).animate( {\r\n\t\t\t\t\t\twidth: response.data.percentage + '%',\r\n\t\t\t\t\t}, 50, function() {\r\n\t\t\t\t\t\t// Animation complete.\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t\tEDD_Import.process_step( parseInt( response.data.step ), import_data, self );\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t} ).fail( function( response ) {\r\n\t\t\tif ( window.console && window.console.log ) {\r\n\t\t\t\tconsole.log( response );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n};\r\n\r\njQuery( document ).ready( function( $ ) {\r\n\tEDD_Import.init();\r\n} );\r\n"],"sourceRoot":""}