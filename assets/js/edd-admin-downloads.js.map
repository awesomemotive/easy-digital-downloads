{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./assets/js/admin/components/tooltips/index.js","webpack:///./assets/js/admin/downloads/bulk-edit.js","webpack:///./assets/js/admin/downloads/index.js","webpack:///./assets/js/utils/chosen.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;;AAEA;AACA;AACA,CAAC;;;;;;;;;;;;AC3BD;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF,CAAC;;;;;;;;;;;;;AC1CD;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACgD;AACgB;AACxC;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,EAAE,qFAAmB;;AAErB;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,eAAe,qEAAa;AAC5B,IAAI;AACJ;AACA;AACA,GAAG;AACH,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA,IAAI;AACJ,GAAG;AACH,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ,GAAG;AACH,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B,aAAa,8CAA8C;AAC3D;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;;AAEJ;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,CAAC;;;;;;;;;;;;;AChZD;AAAA;AAAA;AAAA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"assets/js/edd-admin-downloads.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./assets/js/admin/downloads/index.js\");\n","/**\r\n * Attach tooltips\r\n *\r\n * @param {string} selector\r\n */\r\nexport const edd_attach_tooltips = function( selector ) {\r\n\tselector.tooltip( {\r\n\t\tcontent: function() {\r\n\t\t\treturn $( this ).prop( 'title' );\r\n\t\t},\r\n\t\ttooltipClass: 'edd-ui-tooltip',\r\n\t\tposition: {\r\n\t\t\tmy: 'center top',\r\n\t\t\tat: 'center bottom+10',\r\n\t\t\tcollision: 'flipfit',\r\n\t\t},\r\n\t\thide: {\r\n\t\t\tduration: 200,\r\n\t\t},\r\n\t\tshow: {\r\n\t\t\tduration: 200,\r\n\t\t},\r\n\t} );\r\n};\r\n\r\njQuery( document ).ready( function( $ ) {\r\n\tedd_attach_tooltips( $( '.edd-help-tip' ) );\r\n} );\r\n","jQuery( document ).ready( function( $ ) {\r\n\t$( 'body' ).on( 'click', '#the-list .editinline', function() {\r\n\t\tlet post_id = $( this ).closest( 'tr' ).attr( 'id' );\r\n\r\n\t\tpost_id = post_id.replace( 'post-', '' );\r\n\r\n\t\tconst $edd_inline_data = $( '#post-' + post_id );\r\n\r\n\t\tconst regprice = $edd_inline_data.find( '.column-price .downloadprice-' + post_id ).val();\r\n\r\n\t\t// If variable priced product disable editing, otherwise allow price changes\r\n\t\tif ( regprice !== $( '#post-' + post_id + '.column-price .downloadprice-' + post_id ).val() ) {\r\n\t\t\t$( '.regprice', '#edd-download-data' ).val( regprice ).attr( 'disabled', false );\r\n\t\t} else {\r\n\t\t\t$( '.regprice', '#edd-download-data' ).val( edd_vars.quick_edit_warning ).attr( 'disabled', 'disabled' );\r\n\t\t}\r\n\t} );\r\n\r\n\t// Bulk edit save\r\n\t$( document.body ).on( 'click', '#bulk_edit', function() {\r\n\t\t// define the bulk edit row\r\n\t\tconst $bulk_row = $( '#bulk-edit' );\r\n\r\n\t\t// get the selected post ids that are being edited\r\n\t\tconst $post_ids = new Array();\r\n\t\t$bulk_row.find( '#bulk-titles' ).children().each( function() {\r\n\t\t\t$post_ids.push( $( this ).attr( 'id' ).replace( /^(ttle)/i, '' ) );\r\n\t\t} );\r\n\r\n\t\t// get the stock and price values to save for all the product ID's\r\n\t\tconst $price = $( '#edd-download-data input[name=\"_edd_regprice\"]' ).val();\r\n\r\n\t\tconst data = {\r\n\t\t\taction: 'edd_save_bulk_edit',\r\n\t\t\tedd_bulk_nonce: $post_ids,\r\n\t\t\tpost_ids: $post_ids,\r\n\t\t\tprice: $price,\r\n\t\t};\r\n\r\n\t\t// save the data\r\n\t\t$.post( ajaxurl, data );\r\n\t} );\r\n} );\r\n","/**\n * Internal dependencies.\n */\nimport { getChosenVars } from 'utils/chosen.js';\nimport { edd_attach_tooltips } from 'admin/components/tooltips';\nimport './bulk-edit.js';\n\n/**\n * Download Configuration Metabox\n */\nvar EDD_Download_Configuration = {\n\tinit: function() {\n\t\tthis.add();\n\t\tthis.move();\n\t\tthis.remove();\n\t\tthis.type();\n\t\tthis.prices();\n\t\tthis.files();\n\t\tthis.updatePrices();\n\t\tthis.showAdvanced();\n\t},\n\tclone_repeatable: function( row ) {\n\t\t// Retrieve the highest current key\n\t\tlet key = 1;\n\t\tlet highest = 1;\n\t\trow.parent().find( '.edd_repeatable_row' ).each( function() {\n\t\t\tconst current = $( this ).data( 'key' );\n\t\t\tif ( parseInt( current ) > highest ) {\n\t\t\t\thighest = current;\n\t\t\t}\n\t\t} );\n\t\tkey = highest += 1;\n\n\t\tconst clone = row.clone();\n\n\t\tclone.removeClass( 'edd_add_blank' );\n\n\t\tclone.attr( 'data-key', key );\n\t\tclone.find( 'input, select, textarea' ).val( '' ).each( function() {\n\t\t\tlet elem = $( this ),\n\t\t\t\tname = elem.attr( 'name' ),\n\t\t\t\tid = elem.attr( 'id' );\n\n\t\t\tif ( name ) {\n\t\t\t\tname = name.replace( /\\[(\\d+)\\]/, '[' + parseInt( key ) + ']' );\n\t\t\t\telem.attr( 'name', name );\n\t\t\t}\n\n\t\t\telem.attr( 'data-key', key );\n\n\t\t\tif ( typeof id !== 'undefined' ) {\n\t\t\t\tid = id.replace( /(\\d+)/, parseInt( key ) );\n\t\t\t\telem.attr( 'id', id );\n\t\t\t}\n\t\t} );\n\n\t\t/** manually update any select box values */\n\t\tclone.find( 'select' ).each( function() {\n\t\t\t$( this ).val( row.find( 'select[name=\"' + $( this ).attr( 'name' ) + '\"]' ).val() );\n\t\t} );\n\n\t\t/** manually uncheck any checkboxes */\n\t\tclone.find( 'input[type=\"checkbox\"]' ).each( function() {\n\t\t\t// Make sure checkboxes are unchecked when cloned\n\t\t\tconst checked = $( this ).is( ':checked' );\n\t\t\tif ( checked ) {\n\t\t\t\t$( this ).prop( 'checked', false );\n\t\t\t}\n\n\t\t\t// reset the value attribute to 1 in order to properly save the new checked state\n\t\t\t$( this ).val( 1 );\n\t\t} );\n\n\t\tclone.find( 'span.edd_price_id' ).each( function() {\n\t\t\t$( this ).text( parseInt( key ) );\n\t\t} );\n\n\t\tclone.find( 'input.edd_repeatable_index' ).each( function() {\n\t\t\t$( this ).val( parseInt( $( this ).data( 'key' ) ) );\n\t\t} );\n\n\t\tclone.find( 'span.edd_file_id' ).each( function() {\n\t\t\t$( this ).text( parseInt( key ) );\n\t\t} );\n\n\t\tclone.find( '.edd_repeatable_default_input' ).each( function() {\n\t\t\t$( this ).val( parseInt( key ) ).removeAttr( 'checked' );\n\t\t} );\n\n\t\tclone.find( '.edd_repeatable_condition_field' ).each( function() {\n\t\t\t$( this ).find( 'option:eq(0)' ).prop( 'selected', 'selected' );\n\t\t} );\n\n\t\t// Remove Chosen elements\n\t\tclone.find( '.search-choice' ).remove();\n\t\tclone.find( '.chosen-container' ).remove();\n\t\tedd_attach_tooltips( clone.find( '.edd-help-tip' ) );\n\n\t\treturn clone;\n\t},\n\n\tadd: function() {\n\t\t$( document.body ).on( 'click', '.edd_add_repeatable', function( e ) {\n\t\t\te.preventDefault();\n\n\t\t\tconst button = $( this ),\n\t\t\t\trow = button.parent().prev().children( '.edd_repeatable_row:last-child' ),\n\t\t\t\tclone = EDD_Download_Configuration.clone_repeatable( row );\n\n\t\t\tclone.insertAfter( row ).find( 'input, textarea, select' ).filter( ':visible' ).eq( 0 ).focus();\n\n\t\t\t// Setup chosen fields again if they exist\n\t\t\tclone.find( '.edd-select-chosen' ).each( function() {\n\t\t\t\tconst el = $( this );\n\t\t\t\tel.chosen( getChosenVars( el ) );\n\t\t\t} );\n\t\t\tclone.find( '.edd-select-chosen' ).css( 'width', '100%' );\n\t\t\tclone.find( '.edd-select-chosen .chosen-search input' ).attr( 'placeholder', edd_vars.search_placeholder );\n\t\t} );\n\t},\n\n\tmove: function() {\n\t\t$( '.edd_repeatable_table .edd-repeatables-wrap' ).sortable( {\n\t\t\taxis: 'y',\n\t\t\thandle: '.edd-draghandle-anchor',\n\t\t\titems: '.edd_repeatable_row',\n\t\t\tcursor: 'move',\n\t\t\ttolerance: 'pointer',\n\t\t\tcontainment: 'parent',\n\t\t\tdistance: 2,\n\t\t\topacity: 0.7,\n\t\t\tscroll: true,\n\n\t\t\tupdate: function() {\n\t\t\t\tlet count = 0;\n\t\t\t\t$( this ).find( '.edd_repeatable_row' ).each( function() {\n\t\t\t\t\t$( this ).find( 'input.edd_repeatable_index' ).each( function() {\n\t\t\t\t\t\t$( this ).val( count );\n\t\t\t\t\t} );\n\t\t\t\t\tcount++;\n\t\t\t\t} );\n\t\t\t},\n\t\t\tstart: function( e, ui ) {\n\t\t\t\tui.placeholder.height( ui.item.height() - 2 );\n\t\t\t},\n\t\t} );\n\t},\n\n\tremove: function() {\n\t\t$( document.body ).on( 'click', '.edd-remove-row, .edd_remove_repeatable', function( e ) {\n\t\t\te.preventDefault();\n\n\t\t\tlet row = $( this ).parents( '.edd_repeatable_row' ),\n\t\t\t\tcount = row.parent().find( '.edd_repeatable_row' ).length,\n\t\t\t\ttype = $( this ).data( 'type' ),\n\t\t\t\trepeatable = 'div.edd_repeatable_' + type + 's',\n\t\t\t\tfocusElement,\n\t\t\t\tfocusable,\n\t\t\t\tfirstFocusable;\n\n\t\t\t// Set focus on next element if removing the first row. Otherwise set focus on previous element.\n\t\t\tif ( $( this ).is( '.ui-sortable .edd_repeatable_row:first-child .edd-remove-row, .ui-sortable .edd_repeatable_row:first-child .edd_remove_repeatable' ) ) {\n\t\t\t\tfocusElement = row.next( '.edd_repeatable_row' );\n\t\t\t} else {\n\t\t\t\tfocusElement = row.prev( '.edd_repeatable_row' );\n\t\t\t}\n\n\t\t\tfocusable = focusElement.find( 'select, input, textarea, button' ).filter( ':visible' );\n\t\t\tfirstFocusable = focusable.eq( 0 );\n\n\t\t\tif ( type === 'price' ) {\n\t\t\t\tconst price_row_id = row.data( 'key' );\n\t\t\t\t/** remove from price condition */\n\t\t\t\t$( '.edd_repeatable_condition_field option[value=\"' + price_row_id + '\"]' ).remove();\n\t\t\t}\n\n\t\t\tif ( count > 1 ) {\n\t\t\t\t$( 'input, select', row ).val( '' );\n\t\t\t\trow.fadeOut( 'fast' ).remove();\n\t\t\t\tfirstFocusable.focus();\n\t\t\t} else {\n\t\t\t\tswitch ( type ) {\n\t\t\t\t\tcase 'price' :\n\t\t\t\t\t\talert( edd_vars.one_price_min );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'file' :\n\t\t\t\t\t\t$( 'input, select', row ).val( '' );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\talert( edd_vars.one_field_min );\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* re-index after deleting */\n\t\t\t$( repeatable ).each( function( rowIndex ) {\n\t\t\t\t$( this ).find( 'input, select' ).each( function() {\n\t\t\t\t\tlet name = $( this ).attr( 'name' );\n\t\t\t\t\tname = name.replace( /\\[(\\d+)\\]/, '[' + rowIndex + ']' );\n\t\t\t\t\t$( this ).attr( 'name', name ).attr( 'id', name );\n\t\t\t\t} );\n\t\t\t} );\n\t\t} );\n\t},\n\n\ttype: function() {\n\t\t$( document.body ).on( 'change', '#_edd_product_type', function( e ) {\n\t\t\tconst edd_products = $( '#edd_products' ),\n\t\t\t\tedd_download_files = $( '#edd_download_files' ),\n\t\t\t\tedd_download_limit_wrap = $( '#edd_download_limit_wrap' );\n\n\t\t\tif ( 'bundle' === $( this ).val() ) {\n\t\t\t\tedd_products.show();\n\t\t\t\tedd_download_files.hide();\n\t\t\t\tedd_download_limit_wrap.hide();\n\t\t\t} else {\n\t\t\t\tedd_products.hide();\n\t\t\t\tedd_download_files.show();\n\t\t\t\tedd_download_limit_wrap.show();\n\t\t\t}\n\t\t} );\n\t},\n\n\tprices: function() {\n\t\t$( document.body ).on( 'change', '#edd_variable_pricing', function( e ) {\n\t\t\tconst checked = $( this ).is( ':checked' ),\n\t\t\t\tsingle = $( '#edd_regular_price_field' ),\n\t\t\t\tvariable = $( '#edd_variable_price_fields, .edd_repeatable_table .pricing' ),\n\t\t\t\tbundleRow = $( '.edd-bundled-product-row, .edd-repeatable-row-standard-fields' );\n\n\t\t\tif ( checked ) {\n\t\t\t\tsingle.hide();\n\t\t\t\tvariable.show();\n\t\t\t\tbundleRow.addClass( 'has-variable-pricing' );\n\t\t\t} else {\n\t\t\t\tsingle.show();\n\t\t\t\tvariable.hide();\n\t\t\t\tbundleRow.removeClass( 'has-variable-pricing' );\n\t\t\t}\n\t\t} );\n\t},\n\n\tfiles: function() {\n\t\tvar file_frame;\n\t\twindow.formfield = '';\n\n\t\t$( document.body ).on( 'click', '.edd_upload_file_button', function( e ) {\n\t\t\te.preventDefault();\n\n\t\t\tconst button = $( this );\n\n\t\t\twindow.formfield = button.closest( '.edd_repeatable_upload_wrapper' );\n\n\t\t\t// If the media frame already exists, reopen it.\n\t\t\tif ( file_frame ) {\n\t\t\t\tfile_frame.open();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Create the media frame.\n\t\t\tfile_frame = wp.media.frames.file_frame = wp.media( {\n\t\t\t\ttitle: button.data( 'uploader-title' ),\n\t\t\t\tlibrary: { type: 'image' },\n\t\t\t\tbutton: { text: button.data( 'uploader-button-text' ) },\n\t\t\t\tmultiple: $( this ).data( 'multiple' ) === '0' ? false : true, // Set to true to allow multiple files to be selected\n\t\t\t} );\n\n\t\t\tfile_frame.on( 'menu:render:default', function( view ) {\n\t\t\t\t// Store our views in an object.\n\t\t\t\tconst views = {};\n\n\t\t\t\t// Unset default menu items\n\t\t\t\tview.unset( 'library-separator' );\n\t\t\t\tview.unset( 'gallery' );\n\t\t\t\tview.unset( 'featured-image' );\n\t\t\t\tview.unset( 'embed' );\n\n\t\t\t\t// Initialize the views in our view object.\n\t\t\t\tview.set( views );\n\t\t\t} );\n\n\t\t\t// When an image is selected, run a callback.\n\t\t\tfile_frame.on( 'select', function() {\n\t\t\t\tconst selection = file_frame.state().get( 'selection' );\n\t\t\t\tselection.each( function( attachment, index ) {\n\t\t\t\t\tattachment = attachment.toJSON();\n\n\t\t\t\t\tlet selectedSize = 'image' === attachment.type ? $( '.attachment-display-settings .size option:selected' ).val() : false,\n\t\t\t\t\t\tselectedURL = attachment.url,\n\t\t\t\t\t\tselectedName = attachment.title.length > 0 ? attachment.title : attachment.filename;\n\n\t\t\t\t\tif ( selectedSize && typeof attachment.sizes[ selectedSize ] !== 'undefined' ) {\n\t\t\t\t\t\tselectedURL = attachment.sizes[ selectedSize ].url;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( 'image' === attachment.type ) {\n\t\t\t\t\t\tif ( selectedSize && typeof attachment.sizes[ selectedSize ] !== 'undefined' ) {\n\t\t\t\t\t\t\tselectedName = selectedName + '-' + attachment.sizes[ selectedSize ].width + 'x' + attachment.sizes[ selectedSize ].height;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tselectedName = selectedName + '-' + attachment.width + 'x' + attachment.height;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( 0 === index ) {\n\t\t\t\t\t\t// place first attachment in field\n\t\t\t\t\t\twindow.formfield.find( '.edd_repeatable_attachment_id_field' ).val( attachment.id );\n\t\t\t\t\t\twindow.formfield.find( '.edd_repeatable_thumbnail_size_field' ).val( selectedSize );\n\t\t\t\t\t\twindow.formfield.find( '.edd_repeatable_upload_field' ).val( selectedURL );\n\t\t\t\t\t\twindow.formfield.find( '.edd_repeatable_name_field' ).val( selectedName );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Create a new row for all additional attachments\n\t\t\t\t\t\tconst row = window.formfield,\n\t\t\t\t\t\t\tclone = EDD_Download_Configuration.clone_repeatable( row );\n\n\t\t\t\t\t\tclone.find( '.edd_repeatable_attachment_id_field' ).val( attachment.id );\n\t\t\t\t\t\tclone.find( '.edd_repeatable_thumbnail_size_field' ).val( selectedSize );\n\t\t\t\t\t\tclone.find( '.edd_repeatable_upload_field' ).val( selectedURL );\n\t\t\t\t\t\tclone.find( '.edd_repeatable_name_field' ).val( selectedName );\n\t\t\t\t\t\tclone.insertAfter( row );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\n\t\t\t// Finally, open the modal\n\t\t\tfile_frame.open();\n\t\t} );\n\n\t\t// @todo Break this out and remove jQuery.\n\t\t$( '.edd_repeatable_upload_field' )\n\t\t\t.on( 'focus', function() {\n\t\t\t\tconst input = $( this );\n\n\t\t\t\tinput.data( 'originalFile', input.val() );\n\t\t\t} )\n\t\t\t.on( 'change', function() {\n\t\t\t\tconst input = $( this );\n\t\t\t\tconst originalFile = input.data( 'originalFile' );\n\n\t\t\t\tif ( originalFile !== input.val() ) {\n\t\t\t\t\tinput\n\t\t\t\t\t\t.closest( '.edd-repeatable-row-standard-fields' )\n\t\t\t\t\t\t.find( '.edd_repeatable_attachment_id_field' )\n\t\t\t\t\t\t.val( 0 );\n\t\t\t\t}\n\t\t\t} );\n\n\t\tvar file_frame;\n\t\twindow.formfield = '';\n\t},\n\n\tupdatePrices: function() {\n\t\t$( '#edd_price_fields' ).on( 'keyup', '.edd_variable_prices_name', function() {\n\t\t\tconst key = $( this ).parents( '.edd_repeatable_row' ).data( 'key' ),\n\t\t\t\tname = $( this ).val(),\n\t\t\t\tfield_option = $( '.edd_repeatable_condition_field option[value=' + key + ']' );\n\n\t\t\tif ( field_option.length > 0 ) {\n\t\t\t\tfield_option.text( name );\n\t\t\t} else {\n\t\t\t\t$( '.edd_repeatable_condition_field' ).append(\n\t\t\t\t\t$( '<option></option>' )\n\t\t\t\t\t\t.attr( 'value', key )\n\t\t\t\t\t\t.text( name )\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\t},\n\n\tshowAdvanced: function() {\n\t\t// Toggle display of entire custom settings section for a price option\n\t\t$( document.body ).on( 'click', '.toggle-custom-price-option-section', function( e ) {\n\t\t\te.preventDefault();\n\n\t\t\tconst toggle = $( this ),\n\t\t\t\t  show = toggle.html() === edd_vars.show_advanced_settings ?\n\t\t\t\t\t  true :\n\t\t\t\t\t  false;\n\n\t\t\tif ( show ) {\n\t\t\t\ttoggle.html( edd_vars.hide_advanced_settings );\n\t\t\t} else {\n\t\t\t\ttoggle.html( edd_vars.show_advanced_settings );\n\t\t\t}\n\n\t\t\tconst header = toggle.parents( '.edd-repeatable-row-header' );\n\t\t\theader.siblings( '.edd-custom-price-option-sections-wrap' ).slideToggle();\n\n\t\t\tlet first_input;\n\t\t\tif ( show ) {\n\t\t\t\tfirst_input = $( ':input:not(input[type=button],input[type=submit],button):visible:first', header.siblings( '.edd-custom-price-option-sections-wrap' ) );\n\t\t\t} else {\n\t\t\t\tfirst_input = $( ':input:not(input[type=button],input[type=submit],button):visible:first', header.siblings( '.edd-repeatable-row-standard-fields' ) );\n\t\t\t}\n\t\t\tfirst_input.focus();\n\t\t} );\n\t}\n};\n\njQuery( document ).ready( function( $ ) {\n\tEDD_Download_Configuration.init();\n} );\n","/* global edd_vars */\r\n\r\nexport const chosenVars = {\r\n\tdisable_search_threshold: 13,\r\n\tsearch_contains: true,\r\n\tinherit_select_classes: true,\r\n\tsingle_backstroke_delete: false,\r\n\tplaceholder_text_single: edd_vars.one_option,\r\n\tplaceholder_text_multiple: edd_vars.one_or_more_option,\r\n\tno_results_text: edd_vars.no_results_text,\r\n};\r\n\r\n/**\r\n * Determine the variables used to initialie Chosen on an element.\r\n *\r\n * @param {Object} el select element.\r\n * @return {Object} Variables for Chosen.\r\n */\r\nexport const getChosenVars = ( el ) => {\r\n\tlet inputVars = chosenVars;\r\n\r\n\t// Ensure <select data-search-type=\"download\"> or similar can use search always.\r\n\t// These types of fields start with no options and are updated via AJAX.\r\n\tif ( el.data( 'search-type' ) ) {\r\n\t\tdelete inputVars.disable_search_threshold;\r\n\t}\r\n\r\n\treturn inputVars;\r\n}\r\n"],"sourceRoot":""}